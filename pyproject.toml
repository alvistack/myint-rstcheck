[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "rstcheck"
requires-python = ">=3.8"
authors = [
  { name = "Steven Myint", email = "git@stevenmyint.com" },
]
maintainers = [
  { name = "Christian Riedel", email = "cielquan@protonmail.com" },
]
description = "Checks syntax of reStructuredText and code blocks nested within it"
readme = "README.rst"
license = { text = "MIT" }
classifiers = [
  "Topic :: Software Development :: Quality Assurance",
]
keywords = ["restructuredtext", "rst", "linter", "static-analysis"]
dynamic = ["version"]

dependencies = [
  "rstcheck-core >=1.0.2",
  "importlib-metadata >=1.6; python_version<='3.8'",
  "typing-extensions >=3.7.4; python_version<='3.8'",
  "typer[all]  >=0.4.1, <0.10",
]

[project.scripts]
rstcheck = "rstcheck._cli:main"

[project.optional-dependencies]
sphinx = ["sphinx >=4.0"]
toml = ["tomli >=2.0; python_version<='3.10'"]
testing = [
    "pytest >=7.2",
    "pytest-cov >=3.0",
    "coverage[toml] >=6.0",
    "coverage-conditional-plugin >=0.5",
    "pytest-sugar >=0.9.5",
    "pytest-randomly >=3.0",
]
docs = [
    "sphinx >=4.0",
    "m2r2 >=0.3.2",
    "sphinx-rtd-theme >=1.2",
    "sphinxcontrib-spelling >=7.3",
    "sphinx-click >=4.0.3",
    "sphinx-autobuild >=2021.3.14",
]
type-check = [
  "mypy >=1.0",
]
dev = [
  "rstcheck[sphinx,toml,testing,docs,type-check]",
  "tox >=3.15",
]

[project.urls]
Documentation = "https://rstcheck.readthedocs.io/en/latest/"
Repository = "https://github.com/rstcheck/rstcheck"
Changelog = "https://github.com/rstcheck/rstcheck/blob/main/CHANGELOG.md"

[tool.setuptools_scm]
write_to = "src/rstcheck/__version__.py"


# -- BLACK CONFIG ---------------------------------------------------------------------
[tool.black]
line-length = 100
exclude = "venv/"
include = '\.pyi?$'  # single quotes needed


# -- ISORT CONFIG ---------------------------------------------------------------------
[tool.isort]
profile = "black"
lines_after_imports = 2
combine_as_imports = true
skip_gitignore = true


# -- MYPY CONFIG ----------------------------------------------------------------------
[tool.mypy]
show_error_codes = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
disallow_any_generics = true
check_untyped_defs = true
implicit_reexport = false
python_version = "3.10"  # CHANGE ME
plugins = "pydantic.mypy"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true
warn_untyped_fields = true


# -- FLAKEHEAVEN CONFIG ----------------------------------------------------------------
[tool.flakeheaven]
base = ["https://raw.githubusercontent.com/Cielquan/my-flake8-plugins/v1.5.0/flakeheaven-base.toml"]
min_python_version = "3.7"  # CHANGE ME

[tool.flakeheaven.exceptions."examples"]
flake8-eradicate = ["-E800"]


# -- PYLINT CONFIG --------------------------------------------------------------------
[tool.pylint]

[tool.pylint.messages_control]
disable = [
  # deactivate because double check
  # https://github.com/PyCQA/pylint/issues/3512
  "C0103",  # invalid-name - [pep8-naming]
  "C0113",  # unneeded-not - F713[flake8]
  "C0114",  # missing-module-docstring - D100,D104[flake8]
  "C0115",  # missing-class-docstring - D101,D106[flake8]
  "C0116",  # missing-function-docstring - D102,D103,D105[flake8]
  "C0301",  # line-too-long - E501[pycodestyle]
  "C0303",  # trailing-whitespace - W291,W293[falke8]
  "C0304",  # missing-final-newline - W292[falke8]
  "C0305",  # trailing-newlines - W291[falke8]
  "C0321",  # multiple-statements - E701[falke8]
  "C0411",  # wrong-import-order - I202[flake8]
  "C0413",  # wrong-import-position - E402[flake8]
  "E0602",  # undefined-variable - F821[flake8]
  "R0912",  # too-many-branches - C901[flake8]
  "W0301",  # unnecessary-semicolon - E703[flake8]
  "W0311",  # bad-indentation - E111[flake8]
  "W0611",  # unused-import - F401[flake8]
  "W0612",  # unused-variable - F841[flake8]
  "W0702",  # bare-except - E722[pycodestyle]
  # deactivate because unwanted
  "W0511",  # fixme
  "R0903",  # too-few-public-methods
  # deactivate because of bugs
  "W1203",  # Use % format in logger funcs | https://github.com/PyCQA/pylint/issues/2354
]


# -- PYTEST CONFIG --------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = "-ra --showlocals"
mock_use_standalone_module = true


# -- COVERAGE CONFIG ------------------------------------------------------------------
[tool.coverage]
[tool.coverage.run]
plugins = ["coverage_conditional_plugin"]
branch = true
parallel = true
context = "static-context"
omit = [
  "tests/*",
]

[tool.coverage.paths]
tox_combine = [
  "src/rstcheck",
  "*/.tox/*/lib/python*/site-packages/rstcheck",
  "*/.tox/pypy*/site-packages/rstcheck",
  "*/.tox\\*\\Lib\\site-packages\\rstcheck",
]
local_combine = [
  "src/rstcheck",
  "*/.venv/lib/python*/site-packages/rstcheck",
  "*/.venv\\*\\Lib\\site-packages\\rstcheck",
  "*/src/rstcheck",
  "*\\src\\rstcheck",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "# pragma: no cover",
  "if __name__ == ['\"]__main__['\"]:",
  "def __str__",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "if 0:",
  "if False:",
  "if TYPE_CHECKING:",
  "if MYPY:",
]

[tool.coverage.html]
show_contexts = true

[tool.coverage.coverage_conditional_plugin.rules]
# use with: # pragma: <KEY>
py-gte-38 = "sys_version_info >= (3, 8)"
py-gte-310 = "sys_version_info >= (3, 10)"
